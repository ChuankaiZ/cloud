spring.application.name=node01
server.port=8003
#设置与Eureka Server交互的地址，查询服务和注册服务都需要依赖这个地址
eureka.client.serviceUrl.defaultZone=http://localhost:8002/eureka/,

##表示是否将自己注册到Eureka Server，默认为true。
#eureka.client.register-with-eureka=false
##表示是否从Eureka Server获取注册信息，默认为true。
#eureka.client.fetch-registry=false

#因为熔断只是作用在服务调用这一端
feign.hystrix.enabled=true
#因此我们只需要改动spring-cloud-consumer项目相关代码就可以
#因为，Feign中已经依赖了Hystrix所以在maven配置上不用做任何改动。


#turbine.appConfig ：配置Eureka中的serviceId列表，表明监控哪些服务
#turbine.aggregator.clusterConfig ：
#       指定聚合哪些集群，多个使用”,”分割，默认为default。
#       可使用http://.../turbine.stream?cluster={clusterConfig之一}访问
#turbine.clusterNameExpression ：
#   1. clusterNameExpression指定集群名称，默认表达式appName；
#   此时：turbine.aggregator.clusterConfig需要配置想要监控的应用名称；
#   2. 当clusterNameExpression: default时，turbine.aggregator.clusterConfig可以不写，因为默认就是default；
#   3. 当clusterNameExpression: metadata[‘cluster’]时，假设想要监控的应用配置了\
#   eureka.instance.metadata-map.cluster: ABC，则需要配置，同时turbine.aggregator.clusterConfig: ABC
turbine.appConfig=spring-cloud-eureka1,spring-cloud-eureka4
turbine.aggregator.clusterConfig= default
turbine.clusterNameExpression= new String("default")
